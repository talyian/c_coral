c_extern printf: Func[Ptr, ..., Void]

type Point = {Float64, Float64}
type Point1 = Tuple[Float64, Float64]
type Point2 = {x:Float64, y:Float64}
type Vec3 = {x:Float64, y:Float64, z:Float64}

func main():
  printf "Tuples Test\n"
  let v = Vec3(100.0, 200.0, 300.0)
  let x = v.x
  printf("v.x: %f\n", x)
  printf("v.y: %f\n", v.y)
  printf("v.y: %f\n", v.z)
  let t = (3, "Three", 3.33)
  let t0 = t.Item0
  let t1 = t.Item1
  printf("t: %d\n", t0)
  printf("t: %s\n", t1)
  printf("t: %f\n", t.Item2)
  let p1 = (4.0, 5.0)
  let p2 : {Float64, Float64} = (4.0, 5.0)
  let p3 : Tuple[Float64, Float64] = (14.0, 15.0)
  0
